{
  "Comment": "Parse a Json File stored uploaded in S3",
  "StartAt": "ParseJsonFileinS3",
  "States": {
    "ParseJsonFileinS3": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<REGION>:<ACCOUNT_ID>:function:MediaRepo-ParseJson-StepFunc",
      "Retry": [
        {
          "ErrorEquals": [ "HandledError" ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        },
        {
          "ErrorEquals": [ "States.TaskFailed" ],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        },
        {
          "ErrorEquals": [ "States.ALL" ],
          "IntervalSeconds": 5,
          "MaxAttempts": 5,
          "BackoffRate": 2.0
        }
      ],
      "Next": "CreateMediaObjectinDynamoDB"
    },
    "CreateMediaObjectinDynamoDB": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<REGION>:<ACCOUNT_ID>:function:MediaRepo-CreateDBObject-StepFunc",
      "Retry": [
        {
          "ErrorEquals": [ "HandledError" ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        },
        {
          "ErrorEquals": [ "States.TaskFailed" ],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        },
        {
          "ErrorEquals": [ "States.ALL" ],
          "IntervalSeconds": 5,
          "MaxAttempts": 5,
          "BackoffRate": 2.0
        }
      ],
      "Next": "CopyEssenceToRepoBucket"
    },
    "CopyEssenceToRepoBucket": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<REGION>:<ACCOUNT_ID>:function:MediaRepo-CopyEssence-StepFunc",
      "Retry": [
        {
          "ErrorEquals": [ "HandledError" ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        },
        {
          "ErrorEquals": [ "States.TaskFailed" ],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        },
        {
          "ErrorEquals": [ "States.ALL" ],
          "IntervalSeconds": 5,
          "MaxAttempts": 5,
          "BackoffRate": 2.0
        }
      ],
      "Next": "CopyRawMetadataToRepoBucket"
    },
    "CopyRawMetadataToRepoBucket": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<REGION>:<ACCOUNT_ID>:function:MediaRepo-CopyJson-StepFunc",
      "Retry": [
        {
          "ErrorEquals": [ "HandledError" ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        },
        {
          "ErrorEquals": [ "States.TaskFailed" ],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        },
        {
          "ErrorEquals": [ "States.ALL" ],
          "IntervalSeconds": 5,
          "MaxAttempts": 5,
          "BackoffRate": 2.0
        }
      ],
      "Next": "UpdateMediaObjectinDynamoDB"
    },
    "UpdateMediaObjectinDynamoDB": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<REGION>:<ACCOUNT_ID>:function:MediaRepo-UpdateDBMediaObject-StepFunc",
      "Retry": [
        {
          "ErrorEquals": [ "HandledError" ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        },
        {
          "ErrorEquals": [ "States.TaskFailed" ],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        },
        {
          "ErrorEquals": [ "States.ALL" ],
          "IntervalSeconds": 5,
          "MaxAttempts": 5,
          "BackoffRate": 2.0
        }
      ],
      "End": true
    }



  }
}